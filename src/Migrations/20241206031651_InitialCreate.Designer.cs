// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using src.Models;

#nullable disable

namespace src.Migrations
{
    [DbContext(typeof(Models_DataContext))]
    [Migration("20241206031651_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("src.Models.Karyawan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Alamat")
                        .HasColumnType("text");

                    b.Property<int>("JabatanId")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("MulaiBekerja")
                        .HasColumnType("date");

                    b.Property<string>("Nama")
                        .HasColumnType("text");

                    b.Property<DateOnly>("TanggalLahir")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("JabatanId");

                    b.ToTable("Karyawan");
                });

            modelBuilder.Entity("src.Models.KategoriJabatan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Gaji")
                        .HasColumnType("integer");

                    b.Property<string>("Jabatan")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KategoriJabatan");
                });

            modelBuilder.Entity("src.Models.KategoriProduk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Kategori")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KategoriProduk");
                });

            modelBuilder.Entity("src.Models.KategoriTransaksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Tipe")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("KategoriTransaksi");
                });

            modelBuilder.Entity("src.Models.Produk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Diskon")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Expired")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Harga")
                        .HasColumnType("numeric");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<string>("Nama")
                        .HasColumnType("text");

                    b.Property<int>("TokoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KategoriId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("src.Models.Transaksi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Deskripsi")
                        .HasColumnType("text");

                    b.Property<int>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<int?>("KategoriTransaksiId")
                        .HasColumnType("integer");

                    b.Property<int>("Nominal")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TanggalTransaksi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Tipe")
                        .HasColumnType("integer");

                    b.Property<int>("TokoId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("KategoriTransaksiId");

                    b.ToTable("Transaksi");
                });

            modelBuilder.Entity("src.Models.Karyawan", b =>
                {
                    b.HasOne("src.Models.KategoriJabatan", "Jabatan")
                        .WithMany("Karyawan")
                        .HasForeignKey("JabatanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Jabatan");
                });

            modelBuilder.Entity("src.Models.Produk", b =>
                {
                    b.HasOne("src.Models.KategoriProduk", "Kategori")
                        .WithMany()
                        .HasForeignKey("KategoriId");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("src.Models.Transaksi", b =>
                {
                    b.HasOne("src.Models.KategoriTransaksi", "KategoriTransaksi")
                        .WithMany()
                        .HasForeignKey("KategoriTransaksiId");

                    b.Navigation("KategoriTransaksi");
                });

            modelBuilder.Entity("src.Models.KategoriJabatan", b =>
                {
                    b.Navigation("Karyawan");
                });
#pragma warning restore 612, 618
        }
    }
}
